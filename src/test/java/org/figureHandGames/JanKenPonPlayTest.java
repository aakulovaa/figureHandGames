package org.figureHandGames;

import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.Objects;

import static org.junit.jupiter.api.Assertions.*;

class JanKenPonPlayTest {

    @Test
    void showFigureForJKP() {
        JanKenPonPlay play = new JanKenPonPlay();
        String resultRock = play.showFigureForJKP("–∫–∞–º–µ–Ω—å");
        String resultBird = play.showFigureForJKP("–ø—Ç–∏—Ü–∞");
        String resultWater = play.showFigureForJKP("–≤–æ–¥–∞");
        String[] extended = {"–ù–∏—á—å—èü§ù", "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ", "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è"};
        assertTrue(Arrays.asList(extended).contains(resultRock));
        assertTrue(Arrays.asList(extended).contains(resultBird));
        assertTrue(Arrays.asList(extended).contains(resultWater));
    }

    @Test
    void rockOutcome() {
        JanKenPonPlay play = new JanKenPonPlay();
        assert Objects.equals(play.rockOutcome("–∫–∞–º–µ–Ω—å"), "–ù–∏—á—å—èü§ù");
        assert Objects.equals(play.rockOutcome("–ø—Ç–∏—Ü–∞"), "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
        assert Objects.equals(play.rockOutcome("–≤–æ–¥–∞"), "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
    }

    @Test
    void birdOutcome() {
        JanKenPonPlay play = new JanKenPonPlay();
        assert Objects.equals(play.birdOutcome("–ø—Ç–∏—Ü–∞"), "–ù–∏—á—å—èü§ù");
        assert Objects.equals(play.birdOutcome("–≤–æ–¥–∞"), "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
        assert Objects.equals(play.birdOutcome("–∫–∞–º–µ–Ω—å"), "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
    }

    @Test
    void waterOutcome() {
        JanKenPonPlay play = new JanKenPonPlay();
        assert Objects.equals(play.waterOutcome("–≤–æ–¥–∞"), "–ù–∏—á—å—èü§ù");
        assert Objects.equals(play.waterOutcome("–∫–∞–º–µ–Ω—å"), "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
        assert Objects.equals(play.waterOutcome("–ø—Ç–∏—Ü–∞"), "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
    }
}
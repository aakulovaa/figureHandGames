package org.figureHandGames;

import java.util.Objects;

/**
 * –ö–ª–∞—Å—Å, —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –ª–æ–≥–∏–∫—É –∏–≥—Ä—ã ¬´–∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞¬ª
 *
 * @author Ann Akulova
 */
public class RPSPlay implements StandartGame {
    private final String[] figure = {"–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"};

    /**
     * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–ª—è –∏–≥—Ä—ã –≤ ¬´–∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞¬ª
     *
     * @param figureUser - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã, –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ö–æ–¥ –∏–≥—Ä—ã
     */
    @Override
    public String showFigureForRPS(String figureUser) {
        String result = figure[(int) Math.round(Math.random() + 1)];
        String outcomeOfGame = null;
        switch (figureUser) {
            case "–∫–∞–º–µ–Ω—å":
                outcomeOfGame = rockOutcome(result);
                System.out.println(result);
                break;
            case "–Ω–æ–∂–Ω–∏—Ü—ã":
                outcomeOfGame = scissorsOutcome(result);
                System.out.println(result);
                break;
            case "–±—É–º–∞–≥–∞":
                outcomeOfGame = paperOutcome(result);
                System.out.println(result);
                break;
            default:
                System.out.println("–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞");
        }
        return outcomeOfGame;
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–∞ –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–µ –≤—ã–ø–∞–¥–µ–Ω–∏—è –∫–∞–º–Ω—è
     *
     * @param codeFigure - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–≥—É—Ä–∞
     * @return - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ö–æ–¥ –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–µ –≤—ã–ø–∞–¥–µ–Ω–∏—è –∫–∞–º–Ω—è
     */
    @Override
    public String rockOutcome(String codeFigure) {
        String rockOutcome;
        if (Objects.equals(codeFigure, "–∫–∞–º–µ–Ω—å")) {
            rockOutcome = "–ù–∏—á—å—èü§ù";
        } else if (Objects.equals(codeFigure, "–Ω–æ–∂–Ω–∏—Ü—ã")) {
            rockOutcome = "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ";
        } else {
            rockOutcome = "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è";
        }
        return rockOutcome;
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–∞ –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–µ –≤—ã–ø–∞–¥–µ–Ω–∏—è –Ω–æ–∂–Ω–∏—Ü
     *
     * @param codeFigure - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–≥—É—Ä–∞
     * @return - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ö–æ–¥ –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–µ –≤—ã–ø–∞–¥–µ–Ω–∏—è –Ω–æ–∂–Ω–∏—Ü
     */
    @Override
    public String scissorsOutcome(String codeFigure) {
        String scissorsOutcome;
        if (Objects.equals(codeFigure, "–Ω–æ–∂–Ω–∏—Ü—ã")) {
            scissorsOutcome = "–ù–∏—á—å—èü§ù";
        } else if (Objects.equals(codeFigure, "–±—É–º–∞–≥–∞")) {
            scissorsOutcome = "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ";
        } else {
            scissorsOutcome = "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è";
        }
        return scissorsOutcome;
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏—Å—Ö–æ–¥–∞ –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–µ –≤—ã–ø–∞–¥–µ–Ω–∏—è –±—É–º–∞–≥–∏
     *
     * @param codeFigure - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ–∏–≥—É—Ä–∞
     * @return - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å—Ö–æ–¥ –∏–≥—Ä—ã –≤ —Å–ª—É—á–∞–µ –≤—ã–ø–∞–¥–µ–Ω–∏—è –±—É–º–∞–≥–∏
     */
    @Override
    public String paperOutcome(String codeFigure) {
        String paperOutcome;
        if (Objects.equals(codeFigure, "–±—É–º–∞–≥–∞")) {
            paperOutcome = "–ù–∏—á—å—èü§ù";
        } else if (Objects.equals(codeFigure, "–∫–∞–º–µ–Ω—å")) {
            paperOutcome = "–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ";
        } else {
            paperOutcome = "–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è";
        }
        return paperOutcome;
    }
}

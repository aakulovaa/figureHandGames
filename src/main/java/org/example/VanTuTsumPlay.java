package org.example;

import java.util.Objects;

public class VanTuTsumPlay implements HardPlay{
    private String[] figure = {"–ø—Ç–∏—Ü–∞", "–∫–∞–º–µ–Ω—å", "–ø–∏—Å—Ç–æ–ª–µ—Ç", "—Å—Ç–æ–ª", "–≤–æ–¥–∞"};
    @Override
    public void generateShowFigure(String figureUser){
        String result = figure[(int)Math.round(Math.random()+1)];
        switch (figureUser) {
            case "–∫–∞–º–µ–Ω—å":
                if (Objects.equals(result, "–∫–∞–º–µ–Ω—å")) {
                    System.out.println(result + "\n–ù–∏—á—å—èü§ù");
                } else if (Objects.equals(result, "–ø—Ç–∏—Ü–∞")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                } else if (Objects.equals(result, "—Å—Ç–æ–ª")) {
                System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                }else if (Objects.equals(result, "–ø–∏—Å—Ç–æ–ª–µ—Ç")) {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }else {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }
                break;
            case "–ø—Ç–∏—Ü–∞":
                if (Objects.equals(result, "–ø—Ç–∏—Ü–∞")) {
                    System.out.println(result + "\n–ù–∏—á—å—èü§ù");
                } else if (Objects.equals(result, "–≤–æ–¥–∞")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                } else if (Objects.equals(result, "–∫–∞–º–µ–Ω—å")) {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }else if (Objects.equals(result, "–ø–∏—Å—Ç–æ–ª–µ—Ç")) {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }else {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }
                break;
            case "–ø–∏—Å—Ç–æ–ª–µ—Ç":
                if (Objects.equals(result, "–ø–∏—Å—Ç–æ–ª–µ—Ç")) {
                    System.out.println(result + "\n–ù–∏—á—å—èü§ù");
                } else if (Objects.equals(result, "–∫–∞–º–µ–Ω—å")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                } else if (Objects.equals(result, "–ø—Ç–∏—Ü–∞")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜÔ∏è");
                }else if (Objects.equals(result, "—Å—Ç–æ–ª")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜÔ∏è");
                }else {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }
                break;
            case "—Å—Ç–æ–ª":
                if (Objects.equals(result, "—Å—Ç–æ–ª")) {
                    System.out.println(result + "\n–ù–∏—á—å—èü§ù");
                } else if (Objects.equals(result, "–ø—Ç–∏—Ü–∞")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                } else if (Objects.equals(result, "–≤–æ–¥–∞")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                }else if (Objects.equals(result, "–ø–∏—Å—Ç–æ–ª–µ—Ç")) {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }else {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }
                break;
            case "–≤–æ–¥–∞":
                if (Objects.equals(result, "–≤–æ–¥–∞")) {
                    System.out.println(result + "\n–ù–∏—á—å—èü§ù");
                } else if (Objects.equals(result, "–ø—Ç–∏—Ü–∞")) {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                } else if (Objects.equals(result, "–∫–∞–º–µ–Ω—å")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜ");
                }else if (Objects.equals(result, "–ø–∏—Å—Ç–æ–ª–µ—Ç")) {
                    System.out.println(result + "\n–¢—ã –ø–æ–±–µ–¥–∏–ªüèÜÔ∏è");
                }else {
                    System.out.println(result + "\n–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª‚òπÔ∏è");
                }
                break;


        }
    }
}
